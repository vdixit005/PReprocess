% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eprocess.logconcave.R
\name{eprocess.logconcave}
\alias{eprocess.logconcave}
\title{Calculate PReprocess for testing logconcavity}
\source{
The PR functions are based on code from \url{https://www4.stat.ncsu.edu/~rmartin/Codes/pr.R}
}
\usage{
eprocess.logconcave(X, d, U, f, n = 0, L = 0)
}
\arguments{
\item{X}{Univariate data as a vector}

\item{d}{Parametric kernel function of form d(x,U)}

\item{U}{Mixing density support, where U is an equispaced and odd length vector as the support for univariate f}

\item{f}{A vector of initial guess for f or final f based on old data}

\item{n}{Total sample size already used (default is 0)}

\item{L}{Value of PR log-likelihood based on old data (default is 0)}
}
\value{
A scalar log(e-value) based on PR, PR object f_n and PR log-likelihood L (to use if further data gets incorporated)
}
\description{
This function takes in data and gives the user an e-value for testing logconcavity
}
\examples{
# Generate data from a bimodal density (not log-concave)
datagen = function(n){
ans = numeric(n)
u = runif(n)
for(i in 1:n){
 if(u[i]<0.75){
   ans[i] = rnorm(1,0,sqrt(2))
 } else {
   ans[i] = rnorm(1,10,sqrt(2))
 }
}
return(ans)
}
X = datagen(1000)
# PR initialization
U = cbind(seq(-10, 20, length.out = 101), seq(0.01, 3, length.out = 101))
f0 = rep(1, 101*101)
d1 = function(x,u){mapply(function(mean,sd) dnorm(x,mean,sd), mean=u[,1], sd=u[,2])}
ans = eprocess.logconcave(X,d=d1,U=U,f=f0,n=0,L=0)
# If new data is received, update the process
Y = datagen(1000)
X = c(X, Y)
ans2 = eprocess.logconcave(X,d=d1,U=U,f=ans$f_n$f,n=1000, L=ans$`PR-loglik`)
# More data is received
Y = datagen(1000)
X = c(X, Y)
ans3 = eprocess.logconcave(X,d=d1,U=U,f=ans2$f_n$f,n=2000, L = ans2$`PR-loglik`)

}
\references{
Dixit, Vaidehi, and Ryan Martin. "Anytime valid and asymptotically optimal statistical inference
driven by predictive recursion" arXiv preprint arXiv:2309.13441 (2023)
########################################################################################
}
